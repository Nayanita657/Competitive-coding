#include <iostream>
#include "solution.h"
using namespace std;

int main() {
  int length;
  cin >> length;
  int* input = new int[length];
  for(int i=0; i < length; i++)
    cin >> input[i];
  mergeSort(input, length);
  for(int i = 0; i < length; i++) {
    cout << input[i] << " ";
  }
}


void merge(int input[],int start,int mid,int end)
{
    int size=(end-start)+1;
    int *merge=new int(size);
    int i=start;
    int j=mid+1;
    int k=0;
    while(i<=mid && j<=end)
    {
        if(input[i]<=input[j])
        {
            merge[k]=input[i];
            k++;
            i++;
        }
        if(input[i]>input[j])
        {
            merge[k]=input[j];
            k++;
            j++;
        }
        
    }
    
    
    if(i==mid+1 && j<=end)
    {
        while(j<=end)
        {
            merge[k]=input[j];
            k++;
            j++;
        }
    }
    if(j==end+1 && i<=mid)
    {
        while(i<=mid)
        {
            merge[k]=input[i];
            k++;
            i++;
        }
    }
    
    //copying the element in merge array to the actual array
    for(int p=0;p<size;p++)
    {
        input[start]=merge[p];
        start++;
    }
    
}

void merge_sort(int input[],int start,int end)
{
    if(start>=end)
    {
        return;
    }
    else
    {
        int mid=(end+start)/2;
        merge_sort(input,start,mid);
        merge_sort(input,mid+1,end);
        merge(input,start,mid,end);
    }
}

void mergeSort(int input[], int size){
	// Write your code here
    int start=0;
    int end=size-1;
    merge_sort(input,start,end);
        
}
