

#include <iostream>

using namespace std;
class BinaryTreeNode{
    public:
    int data;
    BinaryTreeNode *left;
    BinaryTreeNode *right;
    
    BinaryTreeNode(int data)
    {
        this->data = data;
        left = NULL;
        right = NULL;
        
    }
    ~BinaryTreeNode()
    {
        delete left;
        delete right;
    }
};

void printTree(BinaryTreeNode *root)
{
    //base case
    if(root == NULL)
        return;
    cout<<root->data<<":";
    if(root->left != NULL)
    {
        cout<<"L"<<root->left->data<<" ";
    }
    if(root->right != NULL)
    {
        cout<<"R"<<root->right->data;
    }
    cout<<endl;
    printTree(root->left);
    printTree(root->right);
}

BinaryTreeNode *takeInput()
{
    int rootData;
    cout<<"Enter data : ";
    cin>>rootData;
    if(rootData == -1)
    {
        return NULL;
    }
    BinaryTreeNode *root = new BinaryTreeNode(rootData);
    BinaryTreeNode *leftChild = takeInput();
    BinaryTreeNode *rightChild = takeInput();
    root->left = leftChild;
    root->right = rightChild;
    return root;
}

int main()
{
    BinaryTreeNode *root = takeInput();
    
    printTree(root);

    return 0;
}

